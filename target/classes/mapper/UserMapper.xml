<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javakc.ssm.user.dao.UserDao">

    <insert id="insert" parameterType="user">
        insert into ssm_user(name, pass, nickname,age,gender,phone, birthday, address)
            values(#{name},#{pass}, #{nickname},#{age}, #{gender}, #{phone}, #{birthday}, #{address})
    </insert>

    <update id="update" parameterType="user">
        update ssm_user set name = #{name}, age = #{age}, gender = #{gender}, phone = #{phone}, birthday = #{birthday},
            address = #{address} where id = #{id}
    </update>

    <delete id="delete" parameterType="int">
        update ssm_user set flag = 1 where id = #{id}
    </delete>

    <delete id="batch" parameterType="int">
        update ssm_user set flag = 1
        <where>
            <foreach collection="array" item="id">
                or id = #{id}
            </foreach>
        </where>
    </delete>
    <select id="queryAll" resultType="user" parameterType="map">
        select  id,name,nickname,age, gender, phone, birthday, address from ssm_user
        <where>
            and flag = 0
            <if test="user.realnamed != 'null%' ">
            and name like #{user.realnamed}
            </if>
            and nickname != #{notnickname}
            <if test="user.sdate != null and user.ldate != null">
                and createtime between #{user.sdate} and #{ldate2}
            </if>
        </where>
         limit #{start},#{size}
    </select>

    <select id="toupdate" resultType="user" parameterType="map">
        select id,name,nickname,age,gender,phone,birthday,address from ssm_user
        <where>
             id = #{id}
        </where>
    </select>

    <select id="queryByCount" resultType="long" parameterType="map">
        select count(1) from ssm_user
        <where>
            and flag = 0
        </where>
    </select>

    <select id="queryById" parameterType="string" resultType="user">
        select name,nickname,age, gender, phone, birthday, address from ssm_user where id = #{id}
    </select>

    <select id="unique" parameterType="string" resultType="int">
        select count(1) from ssm_user where nickname = #{nickname}
    </select>

    <select id="queryByName" parameterType="string" resultType="user">
        select id,name,pass,nickname,age,gender,phone,birthday,address,roles from ssm_user where nickname = #{nickname} and flag = 0
    </select>


</mapper>